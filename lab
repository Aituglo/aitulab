#!/bin/bash

COLOR_NC='\e[0m' # No Color
COLOR_WHITE='\e[1;37m'
COLOR_BLACK='\e[0;30m'
COLOR_BLUE='\e[0;34m'
COLOR_LIGHT_BLUE='\e[1;34m'
COLOR_GREEN='\e[0;32m'
COLOR_LIGHT_GREEN='\e[1;32m'
COLOR_CYAN='\e[0;36m'
COLOR_LIGHT_CYAN='\e[1;36m'
COLOR_RED='\e[0;31m'
COLOR_LIGHT_RED='\e[1;31m'
COLOR_PURPLE='\e[0;35m'
COLOR_LIGHT_PURPLE='\e[1;35m'
COLOR_BROWN='\e[0;33m'
COLOR_YELLOW='\e[1;33m'
COLOR_GRAY='\e[0;30m'
COLOR_LIGHT_GRAY='\e[0;37m'
BOLD='\e[1m'
UNDERLINED='\e[4m'

CURRENT_VERSION="$(cat /opt/aitulab/version)"
VERSION=$(echo "$(curl -fsSL https://raw.githubusercontent.com/aituglo/aitulab/master/version)")

function version_gt() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
                                                                                                                                                                                                                                                                                                                                                                                                                                          

function usage {
  echo
  echo -e "$COLOR_RED"                                                                                                                                                    
  echo "      .d888888  dP d888888P dP     dP dP         .d888888   888888ba  " 
  echo "     d8'    88  88    88    88     88 88        d8'    88   88    '8b " 
  echo "     88aaaaa88  88    88    88     88 88        88aaaaa88   88aaaa8P' " 
  echo "     88     88  88    88    88     88 88        88     88   88   '8b. " 
  echo "     88     88  88    88    Y8.   .8P 88        88     88   88    .88 " 
  echo "     88     88  dP    dP    'Y88888P' 88888888P 88     88   88888888P " 
  echo -e "$COLOR_BLUE"
  echo -e "$UNDERLINED"
  echo
  echo "                   https://github.com/aituglo/aitulab"
  echo
  echo -e "$COLOR_GREEN $BOLD $UNDERLINED"
  echo
  echo "AITULAB"
  echo
  echo -e "$COLOR_NC"
  echo -e "$BOLD $UNDERLINED Update: $COLOR_NC $0 update"
  echo
  echo -e "$COLOR_GREEN $BOLD $UNDERLINED"
  echo
  echo "HACKING"
  echo
  echo -e "$COLOR_NC"
  echo -e "$BOLD $UNDERLINED Lab: $COLOR_NC $0 hacking"
  echo -e "$BOLD $UNDERLINED Nessus: $COLOR_NC $0 nessus (start | stop)"
  echo -e "$BOLD $UNDERLINED Burpsuit: $COLOR_NC $0 burp"
  echo -e "$BOLD $UNDERLINED Wireshark: $COLOR_NC $0 wireshark (start | stop)"
  echo -e "$COLOR_GREEN $BOLD $UNDERLINED"
  echo
  echo "MISC"
  echo
  echo -e "$COLOR_NC"
  echo -e "$BOLD $UNDERLINED Server: $COLOR_NC $0 server (start | stop)"
  echo -e "$BOLD $UNDERLINED Ngrok: $COLOR_NC $0 ngrok (start | stop)"
  echo -e "$COLOR_GREEN $BOLD $UNDERLINED"
  echo
  echo "DEV"
  echo
  echo -e "$COLOR_NC"
  echo -e "$BOLD $UNDERLINED Vscode: $COLOR_NC $0 vscode (start | stop)"
  echo -e "$COLOR_GREEN $BOLD $UNDERLINED"
  echo
  echo "GUI"
  echo
  echo -e "$COLOR_NC"
  echo -e "$BOLD $UNDERLINED Tor Browser: $COLOR_NC $0 tor_browser"
  echo -e "$BOLD $UNDERLINED Firefox: $COLOR_NC $0 firefox"
  echo -e "$BOLD $UNDERLINED Spotify: $COLOR_NC $0 spotify"
  echo -e "$BOLD $UNDERLINED Libre Office: $COLOR_NC $0 libreoffice"
  
}

set -e

if version_gt $VERSION $CURRENT_VERSION; then
  echo "An update is available ! Please start lab update"
fi

if [[ -z "$1" || "$1" == "-h" ]]
then
  usage
  exit 1
elif [[ "$1" == "update" && -z "$2" ]]
then
  if version_gt $VERSION $CURRENT_VERSION; then
    echo -e "$COLOR_BLUE"
    echo "Launching update !"
    echo -e "$COLOR_NC"
    cd /opt/aitulab && git pull
    bash -c /opt/aitulab/update.sh
    exit 0
  else
    echo -e "$COLOR_BLUE"
    echo "There is no update for the moment !"
    echo -e "$COLOR_NC"
    exit 1
  fi
elif [[ "$1" == "clear" && -z "$2" ]]
then
  echo "Clearing everything..."
  exit 0
elif [[ "$1" == "hacking" && -z "$2" ]]
then
  docker run --rm --user $(id -u):$(id -g) -v "${PWD}:/home/hacking/data" --net=host --privileged -it hacktulab zsh
  exit 0
elif [[ "$1" == "server" && "$2" == "start" ]]
then
  docker run --rm -d -p 80:80 -p 443:443 --name server -v "${PWD}:/srv/data" rflathers/nginxserve
  exit 0
elif [[ "$1" == "server" && "$2" == "stop" ]]
then
  docker stop server
  exit 0
elif [[ "$1" == "ngrok" && "$2" == "start" ]]
then
  docker run --rm -d -p 80:80 -p 443:443 --name server -v "${PWD}:/srv/data" rflathers/nginxserve
  docker run --rm -it --link server --name ngrok wernight/ngrok ngrok http server:80
  exit 0
elif [[ "$1" == "ngrok" && "$2" == "stop" ]]
then
  docker stop server
  exit 0
elif [[ "$1" == "cyberchef" && "$2" == "start" ]]
then
  docker run --rm --name cyberchef -d -p 8000:8000 mpepping/cyberchef
  exit 0
elif [[ "$1" == "cyberchef" && "$2" == "stop" ]]
then
  docker stop cyberchef
  exit 0
elif [[ "$1" == "nessus" && "$2" == "start" ]]
then
  docker run --rm -d --name nessus -p 8834:8834 infoslack/nessus
  exit 0
elif [[ "$1" == "nessus" && "$2" == "stop" ]]
then
  docker stop nessus
  exit 0
elif [[ "$1" == "tor_browser" && -z "$2" ]]
then
  docker run -it -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged --name tor-browser jess/tor-browser
  exit 0
elif [[ "$1" == "firefox" && -z "$2" ]]
then
  docker run -d --rm --net=host --name firefox -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix kennethkl/firefox
  exit 0
elif [[ "$1" == "libreoffice" && -z "$2" ]]
then
  docker run -v $HOME/Documents:/home/libreoffice/Documents:rw -v /tmp/.X11-unix:/tmp/.X11-unix -e uid=$(id -u) -e gid=$(id -g) -e DISPLAY=unix$DISPLAY --name libreoffice chrisdaish/libreoffice
  exit 0
elif [[ "$1" == "burp" && -z "$2" ]]
then
  docker run -d --name burpsuite -e DISPLAY -v ${HOME}:/home/burpsuite -v /tmp/.X11-unix/:/tmp/.X11-unix/ -p 8080:8080 alexandreoda/burpsuite
  exit 0
elif [[ "$1" == "spotify" && -z "$2" ]]
then
  docker run -it --rm -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -v /dev/snd:/dev/snd --privileged --name spotify jess/spotify
  exit 0
elif [[ "$1" == "vscode" && "$2" == "start" ]]
then
  docker run -d --rm -it -p 1774:8080 --name vscode -v "$PWD:/home/coder/project" -u "$(id -u):$(id -g)" -e PASSWORD='password' codercom/code-server:latest
  echo -e "$COLOR_BLUE"
  echo "Connect to vscode with http://localhost:1774 with the password: password"
  exit 0
elif [[ "$1" == "vscode" && "$2" == "stop" ]]
then
  docker stop vscode
  exit 0
elif [[ "$1" == "wireshark" && "$2" == "start" ]]
then
  docker run -it -d --rm --name=wireshark --net=host --cap-add=NET_ADMIN -e PUID=1000 -e PGID=1000 -e TZ=Europe/London -p 1775:3000 -v /path/to/config:/config linuxserver/wireshark
  echo -e "$COLOR_BLUE"
  echo "Connect to wireshark with http://localhost:1775"
  exit 0
elif [[ "$1" == "wireshark" && "$2" == "stop" ]]
then
  docker stop wireshark
  exit 0
else
  usage
  exit 1
fi

dock